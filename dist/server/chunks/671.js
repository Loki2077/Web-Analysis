exports.id=671,exports.ids=[671],exports.modules={1135:()=>{},3165:(e,t,o)=>{Promise.resolve().then(o.t.bind(o,6444,23)),Promise.resolve().then(o.t.bind(o,6042,23)),Promise.resolve().then(o.t.bind(o,8170,23)),Promise.resolve().then(o.t.bind(o,9477,23)),Promise.resolve().then(o.t.bind(o,9345,23)),Promise.resolve().then(o.t.bind(o,2089,23)),Promise.resolve().then(o.t.bind(o,6577,23)),Promise.resolve().then(o.t.bind(o,1307,23))},4283:(e,t,o)=>{"use strict";o.d(t,{DataProvider:()=>l,E:()=>d});var r=o(687),n=o(3210);o(4538),o(4538);let a=process.env.NEXT_PUBLIC_PROJECT_MODE,i=(0,n.createContext)(void 0),s=process.env.MONGODB_DATABASENAME||"web-analysis",l=({children:e})=>{let[t,o]=(0,n.useState)([]),[l,d]=(0,n.useState)([]),[c,v]=(0,n.useState)([]),[m,h]=(0,n.useState)([]),u="web-analysis-data";return(0,n.useEffect)(()=>{let e;fetch(`/api/mongodb?action=fetchData&dbName=${s}&collectionName=domain`).then(e=>e.json()).then(e=>{e.success&&Array.isArray(e.data)?(o(e.data.map(e=>({...e,onlineUsers:0,eventCount:0}))),"dev"===a&&console.log("[DataProvider] 域名数据加载成功:",e.data.length,"条记录")):(console.error("[DataProvider] 加载域名数据失败或数据格式错误:",e),o([]))}).catch(e=>{console.error("[DataProvider] 获取域名数据时出错:",e),o([])}),fetch(`/api/mongodb?action=fetchData&dbName=${s}&collectionName=user`).then(e=>e.json()).then(e=>{e.success&&Array.isArray(e.data)?(d(e.data),"dev"===a&&console.log("[DataProvider] 用户数据加载成功:",e.data.length,"条记录")):(console.error("[DataProvider] 加载用户数据失败或数据格式错误:",e),d([]))}).catch(e=>{console.error("[DataProvider] 获取用户数据时出错:",e),d([])}),fetch(`/api/mongodb?action=fetchData&dbName=${s}&collectionName=event`).then(e=>e.json()).then(e=>{e.success&&Array.isArray(e.data)?(v(e.data),"dev"===a&&console.log("[DataProvider] 事件数据加载成功:",e.data.length,"条记录")):("dev"===a&&console.error("[DataProvider] 加载事件数据失败或数据格式错误:",e),v([]))}).catch(e=>{console.error("[DataProvider] 获取事件数据时出错:",e),v([])}),fetch(`/api/mongodb?action=fetchData&dbName=${s}&collectionName=details`).then(e=>e.json()).then(e=>{e.success&&Array.isArray(e.data)?(h(e.data),"dev"===a&&console.log("[DataProvider] 详情数据加载成功:",e.data.length,"条记录")):("dev"===a&&console.error("[DataProvider] 加载详情数据失败或数据格式错误:",e),h([]))}).catch(e=>{console.error("[DataProvider] 获取详情数据时出错:",e),h([])});try{e=function(){throw Error("GoEasy instance is only available in the client environment.")}(),"dev"===a&&console.log("[DataProvider] GoEasy 客户端实例获取成功"),e.pubsub.subscribe({channel:u,onMessage:function(e){"dev"===a&&console.log("[DataProvider] 接收到 GoEasy 消息 - Channel:",e.channel,"内容:",e.content);try{let t=JSON.parse(e.content);if(t&&(v(e=>[...e,t]),"dev"===a&&console.log("[DataProvider] 事件数据更新：插入新事件")),t&&"view"===t.type){let{domain:e,fingerprint:r,ip:n,...i}=t;e&&o(t=>{if(!t.some(t=>t.domain===e)){"dev"===a&&console.log("[DataProvider] 域名数据更新：插入新域名",e);let o={_id:Math.random().toString(36).substring(7),domain:e,onlineUsers:0,eventCount:0,...i};return[...t,o]}return"dev"===a&&console.log("[DataProvider] 域名数据更新：域名已存在，不插入"),t}),r&&n&&e&&d(o=>{let s=o.findIndex(t=>t.fingerprint===r&&t.ip===n&&t.domain===e);if(s>-1){"dev"===a&&console.log("[DataProvider] 用户数据更新：更新 existing user lastSeen",r);let e=[...o];return e[s]={...e[s],lastSeen:t.timestamp,status:"online"},e}{"dev"===a&&console.log("[DataProvider] 用户数据更新：插入新用户",r);let s={_id:Math.random().toString(36).substring(7),fingerprint:r,ip:n,domain:e,createdAt:t.timestamp,lastSeen:t.timestamp,status:"online",...i};return[...o,s]}}),r&&h(e=>{let o=e.findIndex(e=>e.fingerprint===r);if(o>-1){"dev"===a&&console.log("[DataProvider] 详情数据更新：更新 existing detail",r);let n=[...e];return n[o]={...n[o],ip:void 0!==t.ip?t.ip:n[o].ip,os:void 0!==t.os?t.os:n[o].os,browser:void 0!==t.browser?t.browser:n[o].browser,timezone:void 0!==t.timezone?t.timezone:n[o].timezone,language:void 0!==t.language?t.language:n[o].language,referrer:void 0!==t.referrer?t.referrer:n[o].referrer,lastSeen:void 0!==t.timestamp?t.timestamp:n[o].lastSeen},n}{"dev"===a&&console.log("[DataProvider] 详情数据更新：插入新详情",r);let o={_id:Math.random().toString(36).substring(7),...t};return[...e,o]}})}if(t&&"heartbeat"===t.type){let{fingerprint:e}=t;e&&d(o=>{let r=o.findIndex(t=>t.fingerprint===e);if(r>-1){"dev"===a&&console.log("[DataProvider] 用户心跳更新：更新用户状态和 lastSeen",e);let n=[...o];return n[r]={...n[r],lastSeen:t.timestamp,status:"online"},n}return console.log("[DataProvider] 收到心跳，但用户不存在于列表中",e),o})}}catch(e){console.error("[DataProvider] 解析 GoEasy 消息错误:",e)}},onSuccess:function(){"dev"===a&&console.log("[DataProvider] GoEasy 频道订阅成功:",u)},onFailed:function(e){"dev"===a&&console.error("[DataProvider] GoEasy 频道订阅失败:",e)}})}catch(e){"dev"===a&&console.error("[DataProvider] 初始化 GoEasy 或订阅频道失败:",e)}return()=>{}},[u]),(0,r.jsx)(i.Provider,{value:{domainList:t,userList:l,eventList:c,detailList:m},children:e})},d=()=>{let e=(0,n.useContext)(i);if(void 0===e)throw Error("useData 必须在 DataProvider 内部使用");return e}},4431:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>c,metadata:()=>d});var r=o(7413),n=o(2376),a=o.n(n),i=o(8726),s=o.n(i);o(1135);var l=o(9484);let d={title:"不白监测站",description:"实时网站访问监测与分析平台",icons:{icon:"/favicon.svg",apple:"/favicon.svg"}};function c({children:e}){return(0,r.jsx)("html",{lang:"en",children:(0,r.jsx)("body",{className:`${a().variable} ${s().variable} antialiased`,children:(0,r.jsx)(l.DataProvider,{children:e})})})}},4605:(e,t,o)=>{Promise.resolve().then(o.t.bind(o,6346,23)),Promise.resolve().then(o.t.bind(o,7924,23)),Promise.resolve().then(o.t.bind(o,5656,23)),Promise.resolve().then(o.t.bind(o,99,23)),Promise.resolve().then(o.t.bind(o,8243,23)),Promise.resolve().then(o.t.bind(o,8827,23)),Promise.resolve().then(o.t.bind(o,2763,23)),Promise.resolve().then(o.t.bind(o,7173,23))},9175:(e,t,o)=>{Promise.resolve().then(o.bind(o,9484))},9439:(e,t,o)=>{Promise.resolve().then(o.bind(o,4283))},9484:(e,t,o)=>{"use strict";o.d(t,{DataProvider:()=>n});var r=o(2907);let n=(0,r.registerClientReference)(function(){throw Error("Attempted to call DataProvider() from the server but DataProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\WorkSpace\\Trea_ai\\web-analysis-v2.0.0\\src\\context\\DataContext.tsx","DataProvider");(0,r.registerClientReference)(function(){throw Error("Attempted to call useData() from the server but useData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\WorkSpace\\Trea_ai\\web-analysis-v2.0.0\\src\\context\\DataContext.tsx","useData"),(0,r.registerClientReference)(function(){throw Error("Attempted to call the default export of \"E:\\\\WorkSpace\\\\Trea_ai\\\\web-analysis-v2.0.0\\\\src\\\\context\\\\DataContext.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"E:\\WorkSpace\\Trea_ai\\web-analysis-v2.0.0\\src\\context\\DataContext.tsx","default")}};