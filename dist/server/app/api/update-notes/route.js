(()=>{var e={};e.id=397,e.ids=[397],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},2518:e=>{"use strict";e.exports=require("mongodb")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6331:(e,t,s)=>{"use strict";s.d(t,{Fd:()=>p,IM:()=>d,Pf:()=>c,kY:()=>u});var n=s(2518);let r=process.env.MONGODB_URI,o=process.env.MONGODB_DB,a=null,i=null;async function u(e){return a?e&&i?.databaseName!==e&&(i=a.db(e)):(a=new n.MongoClient(r),await a.connect(),i=a.db(e||o)),i}async function c(){let e=new n.MongoClient(r);return await e.connect(),(await e.db().admin().listDatabases()).databases.map(e=>e.name)}async function d(e){let t=await u(e);return(await t.listCollections().toArray()).map(e=>e.name)}async function p(e,t,s={}){return new n.MongoClient(r),(await u(e)).collection(t).find(s).toArray()}},6487:()=>{},8335:()=>{},8776:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>w,routeModule:()=>l,serverHooks:()=>A,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>x});var n={};s.r(n),s.d(n,{OPTIONS:()=>p,POST:()=>d});var r=s(6559),o=s(8088),a=s(7719),i=s(2190),u=s(6331),c=s(2518);async function d(e){try{let t,{detailId:s,notes:n}=await e.json();if(!s)return i.NextResponse.json({success:!1,message:"detailId参数是必需的"},{status:400});if("string"!=typeof n)return i.NextResponse.json({success:!1,message:"notes必须是字符串类型"},{status:400});let r=process.env.MONGODB_DATABASENAME;if(!r)return console.error("[Update Notes API] 数据库配置错误: MONGODB_DATABASENAME环境变量未设置"),i.NextResponse.json({success:!1,message:"数据库配置错误"},{status:500});let o=(await (0,u.kY)(r)).collection("details");try{t=new c.ObjectId(s)}catch(e){return console.error("[Update Notes API] 无效的detailId格式:",s),i.NextResponse.json({success:!1,message:"无效的detailId格式"},{status:400})}let a=await o.updateOne({_id:t},{$set:{notes:n}});if(0===a.matchedCount)return console.warn("[Update Notes API] 未找到指定的详情记录:",s),i.NextResponse.json({success:!1,message:"未找到指定的详情记录"},{status:404});return console.log(`[Update Notes API] 成功更新备注 for detailId: ${s}`),i.NextResponse.json({success:!0,message:"备注更新成功",data:{matchedCount:a.matchedCount,modifiedCount:a.modifiedCount}})}catch(e){return console.error("[Update Notes API] 处理请求时发生错误:",e),i.NextResponse.json({success:!1,message:"服务器内部错误"},{status:500})}}async function p(){return i.NextResponse.json({},{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let l=new r.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/update-notes/route",pathname:"/api/update-notes",filename:"route",bundlePath:"app/api/update-notes/route"},resolvedPagePath:"E:\\WorkSpace\\Trea_ai\\web-analysis-v2.0.0\\src\\app\\api\\update-notes\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:m,workUnitAsyncStorage:x,serverHooks:A}=l;function w(){return(0,a.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:x})}},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),n=t.X(0,[447,580],()=>s(8776));module.exports=n})();